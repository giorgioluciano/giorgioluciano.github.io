{
  "hash": "f3057496d6a45e9ace82fe13678047e3",
  "result": {
    "markdown": "---\ntitle: \"Exploring Coin Flip Sequences with Simulation in R\"\nauthor: \"Giorgio Luciano and ChatGPT\"\ndate: \"2023-11-15\"\ncategories:\n  - R\n  - Simulation\ntags:\n  - Probability\n  - Coin Flip\n---\n\n\nIn this blog post, we will dive into the fascinating world of coin flip sequences. Leveraging the capabilities of R, we will conduct simulations to gain insights into the probabilities of consecutive sequences of heads or tails.\n\n\nLet's kick things off by simulating coin flips using R. We'll conduct experiments with varying numbers of flips to observe how the results evolve.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to simulate coin tosses\nsimulate_tosses <- function(n) {\n  set.seed(42)  # Set seed for reproducibility\n  flips <- sample(c(\"Heads\", \"Tails\"), n, replace = TRUE)\n  return(flips)\n}\n\n# Simulate coin flips for different scenarios\nflips_100 <- simulate_tosses(100)\nflips_1000 <- simulate_tosses(1000)\nflips_10000 <- simulate_tosses(10000)\nflips_100000 <- simulate_tosses(100000)\n```\n:::\n\n\n\nMoving on, we'll analyze the consecutive sequences of heads or tails in each simulation. We'll count the length of these sequences to gain insights into their distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to count consecutive sequences\ncount_consecutive_sequences <- function(flips) {\n  count <- rep(0, length(flips))\n  counter <- 1\n\n  for (i in 2:length(flips)) {\n    if (flips[i] == flips[i-1]) {\n      counter <- counter + 1\n    } else {\n      counter <- 1\n    }\n    count[i] <- counter\n  }\n\n  return(count)\n}\n\n# Function to create a plot for consecutive sequences\ncreate_plot <- function(consecutive_counts, n) {\n  data <- data.frame(Launch = 1:length(consecutive_counts), Consecutive = consecutive_counts)\n  \n  library(ggplot2)\n  \n  plot <- ggplot(data, aes(x = Launch, y = Consecutive)) +\n    geom_line() +\n    labs(title = paste(\"Consecutive Sequences -\", n, \"Tosses\"),\n         x = \"Toss Number\",\n         y = \"Consecutive Count\") +\n    theme_minimal()\n  \n  return(plot)\n}\n\n# Analyze consecutive sequences for different scenarios\nconsecutive_counts_100 <- count_consecutive_sequences(flips_100)\nconsecutive_counts_1000 <- count_consecutive_sequences(flips_1000)\nconsecutive_counts_10000 <- count_consecutive_sequences(flips_10000)\nconsecutive_counts_100000 <- count_consecutive_sequences(flips_100000)\n```\n:::\n\n\n\nNow, let's create visualizations to better understand the distribution of consecutive sequences. We'll use the ggplot2 library to craft insightful graphs and gridExtra to arrange them together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create plots\nplot_100 <- create_plot(consecutive_counts_100, 100)\nplot_1000 <- create_plot(consecutive_counts_1000, 1000)\nplot_10000 <- create_plot(consecutive_counts_10000, 10000)\nplot_100000 <- create_plot(consecutive_counts_100000, 100000)\n\n# Use gridExtra to arrange the plots\nlibrary(gridExtra)\ngrid.arrange(plot_100, plot_1000, plot_10000, plot_100000, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to simulate coin tosses and plot the maximum consecutive sequence\nsimulate_and_plot_max_sequence <- function(n) {\n  # Simulate coin tosses\n  flips <- simulate_tosses(n)\n  \n  # Analyze consecutive sequences\n  consecutive_counts <- count_consecutive_sequences(flips)\n  \n  # Return the maximum consecutive sequence\n  return(max(consecutive_counts))\n}\n\n# Vector to store results\nmax_sequences <- c()\n\n# Perform simulations with increasing numbers of tosses\nfor (n_tosses in c(100, 2000, 10000, 100000)) {\n  max_sequence <- simulate_and_plot_max_sequence(n_tosses)\n  max_sequences <- c(max_sequences, max_sequence)\n}\n\n# Plot the results\nlibrary(ggplot2)\n\ndata <- data.frame(Num_Tosses = c(100, 2000, 10000, 100000), Max_Sequence = max_sequences)\n\nplot <- ggplot(data, aes(x = Num_Tosses, y = Max_Sequence)) +\n  geom_line() +\n  labs(title = \"Maximum Consecutive Sequence vs. Number of Tosses\",\n       x = \"Number of Tosses\",\n       y = \"Max Consecutive Sequence\") +\n  theme_minimal()\n\nprint(plot)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nAfter simulating coin flips and analyzing consecutive sequences, we've gained valuable insights into the probability of encountering various sequences. As expected, with a larger number of flips, the likelihood of encountering longer consecutive sequences increases.\n\nConclusion Exploring probability through simulation is a powerful way to grasp the nuances of random processes. Whether you're a statistician, data scientist, or simply curious, these simulations provide a fascinating glimpse into the world of chance.\n\nFeel free to experiment with different parameters, such as the number of flips or the probability of getting heads or tails, and observe how the results change. Happy exploring!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}