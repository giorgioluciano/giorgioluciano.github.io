{
  "hash": "f8d840f827a761d4ae4c803f982783d3",
  "result": {
    "markdown": "---\ntitle: \"Snippet #1: ggplot loops\"\nauthor: \"Giorgio Luciano\"\ndate: \"2023-02-19\"\ncategories: \n  - R\n  - tutorials\nbibliography: references.bib\n---\n\n\n1.  Create an empty list\n2.  Populate your list with objects (ggplots)\n3.  Create iteratively names for the objects\n4.  Rename the objects inside the list using the name list generated previously\n5.  Show all plots using `wrap_plots`\n\nInstead of using boring plots we will use our private art collections and items.\n\nOne great package to create your art in R is [aRtsy](https://CRAN.R-project.org/package=aRtsy) Let's fire it up\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(aRtsy)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCaricamento del pacchetto richiesto: aRtsy\n```\n:::\n\n```{.r .cell-code}\nrequire(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCaricamento del pacchetto richiesto: patchwork\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#before starting for having a look at the palette \n?colorPalette\n```\n\n::: {.cell-output .cell-output-stderr}\n```\navvio in corso del server httpd per la guida ... fatto\n```\n:::\n:::\n\n\nCreate a Mondrian and save it\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(34)\nComposition_10 <- canvas_squares(colors = colorPalette(\"boogy2\"))\nsaveCanvas(Composition_10 , filename = \"Mondrian.png\")\nComposition_10 \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=192}\n:::\n:::\n\n\nand another one\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\naspect_ratio <- 1\nheight <- 2\nComposition_1 = canvas_segments(colors = colorPalette(\"blackwhite\"))\nComposition_1 \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=192}\n:::\n:::\n\n\nor if you want to create a lots of them, create names automatically and then take a look at just one of your artistic composition in your collection use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_items <- 3\ncollection <- list()\nname_of_Composition  <- list()\nfor (i in 1:n_items) {\n  seed <-  (sample(1:100000,1)) + 1\n  name_of_Composition[[i]] <- paste0(\"Composition_\", i)\n  collection[[i]] <- canvas_squares(colors = colorPalette(\"boogy2\"))\n  \n}\nnames(collection) <- name_of_Composition\n\ncollection\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$Composition_1\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=192}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n$Composition_2\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-2.png){width=192}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n$Composition_3\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-3.png){width=192}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#as you can notice the setting for figure output in this chunk was changed in order to showplots with a rato of 3:1\nwrap_plots(collection)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/r-1.png){width=576}\n:::\n:::\n\n\n[@ggplot2][@aRtsy][@patchwork]\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}