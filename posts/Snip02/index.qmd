---
title: "Tip 2: Cleaning column names of an imported csv"
author: "Giorgio Luciano"
date: "2023-02-19"
categories: 
  - R
  - tutorials
bibliography: references.bib
---

**Summary**

1.  Import data from a csv file
2.  Use the function `clean_names` from [@janitor]j R function
3.  Write a function in base using `gsub` and `regex` to tackle specific issues
4.  You're done

First of all we import the csv using the library [@here]`here`

```{r}
library(here)
file_in <- "FakeData.csv"
path_in <- "posts/Snip02/"
data <- read.csv(here(path_in,file_in), head=T, check.names=F, encoding="latin1")

```

```{r}
library(janitor)
data_fixed <- clean_names(data)
```

And now the [function](https://drdoane.com/clean-consistent-column-names/) written by [William Doane](https://drdoane.com/)

```{r}
clinical_names <- function(.data, unique = FALSE) {
  n <- if (is.data.frame(.data)) colnames(.data) else .data
  n <- gsub("cvrisk", "CVrisk", n , ignore.case=T)
  n <- gsub("hbo", "HBO", n , ignore.case=T)
  n <- gsub("ft4", "fT4", n , ignore.case=T)
  n <- gsub("f_t4", "fT4", n , ignore.case=T)
  n <- gsub("ft3", "fT3", n , ignore.case=T)
  n <- gsub("f_t3", "fT3", n , ignore.case=T)
  n <- gsub("ldl", "LDL", n , ignore.case=T)
  n <- gsub("hdl", "HDL", n , ignore.case=T)
  n <- gsub("hba1c", "HbA1C", n, ignore.case=T)
  n <- gsub("hbac1", "HbA1C", n, ignore.case=T)
  n <- gsub("hb_ac1", "HbA1C",n,ignore.case=T)
  n <- gsub("\\igf\\b", "IGF", n , ignore.case=T)
  n <- gsub("tsh", "TSH", n , ignore.case=T)
  n <- gsub("acth", "ACTH", n, ignore.case=T)
  n <- gsub("\\Na\\b", "Sodio", n)
  n <- gsub("\\K\\b",  "Potassio", n)
  n <- gsub("\\P\\b",  "Fosforo", n)
  n <- gsub("\\pas\\b", "PAS", n, ignore.case=T)
  n <- gsub("\\pad\\b", "PAD", n, ignore.case=T)
  n <- gsub("\\pth\\b", "PTH", n, ignore.case=T)
  n <- gsub("\\clu\\b", "CLU", n, ignore.case=T)
  n <- gsub("\\tg\\b", "TG", n, ignore.case=T)
  n <- gsub("\\glic\\b", "glicemia", n, ignore.case=T)
  if (unique) n <- make.unique(n, sep = "_")
  if (is.data.frame(.data)) {
    colnames(.data) <- n
    .data
  } else {
    n
  }
}

```

```{r}
data_clean <- clinical_names(data_fixed)

comparison <- cbind(data.frame((colnames(data))),
    					data.frame((colnames(data_fixed))),
		    			data.frame((colnames(data_clean))))

colnames(comparison) <- c("original","fixed","clean") 

comparison

```
