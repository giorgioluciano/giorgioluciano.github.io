---
title: "Art in R"
author: "Giorgio Luciano"
date: "2023-02-19"
categories: [R][news][loops]
---

**Summary**

1.  Create an empty list
2.  Populate your list with objects (ggplots)
3.  Create iteratively names for the objects
4.  Rename the objects inside the list using the name list generated previously
5.  Show all plots using wrap_plots

Instead of using boring plots we will use our private art collections and items.

One great package to create your art in R is [aRtsy](https://CRAN.R-project.org/package=aRtsy) Let's fire it up

```{r}
require(aRtsy)
require(patchwork)
```

```{r}
#before starting for having a look at the palette 
?colorPalette
```

Create a Mondrian and save it

```{r,fig.width = 1, fig.height = 1}
set.seed(23)
Composition_10 <- canvas_squares(colors = colorPalette("boogy2"))
saveCanvas(Composition_10 , filename = "Mondrian.png")
Composition_10 
```

and another one

```{r, fig.width = 1, fig.height = 1}
set.seed(1)
aspect_ratio <- 1
height <- 2
Composition_1 = canvas_segments(colors = colorPalette("blackwhite"))
Composition_1 
```

or if you want to create a lots of them, create names automatically and then take a look at just one of your artistic composition in your collection use the following code:

```{r, fig.width = 1, fig.height = 1}

n_items <- 3
collection <- list()
name_of_Composition  <- list()
for (i in 1:n_items) {
  
  seed <-  (sample(1:100000,1)) + 1
  name_of_Composition[[i]] <- paste0("Composition_", i)
  collection[[i]] <- canvas_squares(colors = colorPalette("boogy2"))
  
}
names(collection) <- name_of_Composition

collection

collection$composition_3
```

```{r r, fig.width = 3, fig.height = 1}
#as you can notice the setting for figure output in this chunk was changed in order to showplots with a rato of 3:1
wrap_plots(collection)
```
